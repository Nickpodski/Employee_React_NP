{"version":3,"sources":["components/Wrapper/index.js","utils/api.js","components/TableHtml/index.js","components/Navbar/index.js","components/TableData/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","axios","get","TableHtml","format","headings","rows","map","heading","scope","onClick","row","item","Navbar","useState","value","setValue","submit","onSubmit","class","id","type","placeholder","aria-label","onChange","event","newValue","target","TableData","state","search","filteredUsers","backupRows","nameSort","componentDidMount","searchEmployee","API","then","employees","data","results","employee","src","picture","medium","alt","name","first","last","email","phone","Date","dob","date","getMonth","getDate","getFullYear","setState","catch","err","console","log","handleFormSubmit","preventDefault","getAttribute","sortRows","filter","i","includes","handleNameSort","innerHTML","sortedRows","sort","reverse","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"oPAOeA,MAJf,SAAiBC,GACf,OAAO,sBAAMC,UAAU,UAAhB,SAA2BD,EAAME,Y,iDCF3B,EACC,WACR,OAAOC,IAAMC,IAAI,2ECcVC,MAhBf,SAAmBL,GACjB,IAAMM,EAA2BN,EAA3BM,OAAQC,EAAmBP,EAAnBO,SAAUC,EAASR,EAATQ,KACxB,OACE,wBAAOP,UAAS,gBAAWK,GAAU,iBAArC,UACA,gCACE,6BACGC,EAASE,KAAI,SAAAC,GAAO,OAAI,oBAAIC,MAAM,MAAMC,QAASZ,EAAMY,QAA/B,SAAyCF,WAGtE,gCACGF,EAAKC,KAAI,SAAAI,GAAG,OAAI,6BAAKA,EAAIJ,KAAI,SAAAK,GAAI,OAAI,6BAAKA,kB,QCalCC,MAvBf,SAAgBf,GACd,MAA0BgB,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAASnB,EAAMoB,SAOrB,OACE,8BACE,sBAAKC,MAAM,qDAAX,UACE,sBAAMA,MAAM,eAAZ,+BACA,uBAAMA,MAAM,cAAcD,SAAUD,EAAQF,MAAOA,EAAnD,UACE,uBAAOK,GAAG,SAASD,MAAM,uBAAuBE,KAAK,SAASC,YAAY,iBAAiBC,aAAW,SAASC,SAVlG,SAAAC,GACnB,IAAMC,EAAWD,EAAME,OAAOZ,MAC9BC,EAASU,MASD,wBAAQP,MAAM,uCAAuCE,KAAK,SAA1D,6BCwFGO,E,4MAhGbC,MAAQ,CACNvB,KAAM,CAAC,IACPD,SAAU,CAAC,UAAW,OAAQ,QAAS,QAAS,OAChDD,OAAQ,GACR0B,OAAQ,GACRC,cAAe,CAAC,IAChBC,WAAY,CAAC,IACbC,SAAU,G,EAGZC,kBAAoB,WAClB,EAAKC,kB,EAGPA,eAAiB,WACfC,IACGC,MAAK,SAAAC,GAIJ,IAAMhC,EAAOgC,EAAUC,KAAKC,QAAQjC,KAAI,SAAAkC,GACtC,MAAO,CAAC,qBAAKC,IAAKD,EAASE,QAAQC,OAAQ7C,UAAU,iBAAiB8C,IAAKJ,EAASK,OAA7E,UAA8FL,EAASK,KAAKC,MAA5G,YAAqHN,EAASK,KAAKE,MAAQP,EAASQ,MAAOR,EAASS,MAAQ,IAAIC,KAAKV,EAASW,IAAIC,MAAMC,WAAa,EAAK,IAAO,IAAIH,KAAKV,EAASW,IAAIC,MAAME,UAAY,IAAO,IAAIJ,KAAKV,EAASW,IAAIC,MAAMG,kBAErT,EAAKC,SAAS,CAAEnD,OAAMyB,cAAeO,EAAUC,KAAMP,WAAY1B,OAElEoD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAuB9BG,iBAAmB,SAACrC,GAClBA,EAAMsC,iBACN,IAAMjC,EAASL,EAAME,OAAOqC,aAAa,SACzC,GAAe,KAAXlC,EAAJ,CAIA,IAAImC,EAAW,EAAKpC,MAAMG,WAC1BiC,EAAWA,EAASC,QAAO,SAAAC,GAAO,OAAOA,EAAE,GAAGC,SAAStC,MACvD,EAAK2B,SAAS,CAAEnD,KAAM2D,SALpB,EAAKR,SAAS,CAAEnD,KAAM,EAAKuB,MAAMG,c,EASrCqC,eAAiB,SAAC5C,GAGhB,GAFAA,EAAMsC,iBAEc,SADAtC,EAAME,OAAO2C,UAE/B,GAA4B,IAAxB,EAAKzC,MAAMI,SAAgB,CAC7B,IACMsC,EADc,EAAK1C,MAAMvB,KACAkE,OAC/B,EAAKf,SAAS,CAACnD,KAAMiE,EAAYtC,SAAU,QACtC,CACL,IACMsC,EADc,EAAK1C,MAAMvB,KACAmE,UAC/B,EAAKhB,SAAS,CAACnD,KAAMiE,EAAYtC,SAAU,M,4CAKjD,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEf,SAAUwD,KAAKZ,iBACfxD,KAAMoE,KAAK7C,MAAMvB,OAEnB,cAAC,EAAD,CACED,SAAUqE,KAAK7C,MAAMxB,SACrBC,KAAMoE,KAAK7C,MAAMvB,KACjBF,OAAQsE,KAAK7C,MAAMzB,OACnBM,QAASgE,KAAKL,wB,GA5FAM,aCMTC,MARf,WACE,OACI,cAAC,EAAD,UACE,cAAC,EAAD,O,MCARC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8e62f21e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\">{props.children}</main>;\n}\n\nexport default Wrapper;\n","import axios from \"axios\";\n\nexport default {\n    getEmployee:function() {\n        return axios.get('https://randomuser.me/api/?results=50&inc=picture,name,email,phone,dob');\n    }\n};","import React from \"react\";\n\nfunction TableHtml(props) {\n  let { format, headings, rows } = props;\n  return (\n    <table className={`table ${format || \"table-striped\"}`}>\n    <thead>\n      <tr>\n        {headings.map(heading => <th scope=\"col\" onClick={props.onClick}>{heading}</th>)}\n      </tr>\n    </thead>\n    <tbody>   \n      {rows.map(row => <tr>{row.map(item => <td>{item}</td>)}</tr>)}   \n    </tbody>\n  </table>\n  );\n}\n\nexport default TableHtml;","import React, { useState } from \"react\";\n\nfunction Navbar(props) {\n  const [value, setValue] = useState(\"\");\n\n  const submit = props.onSubmit;\n\n  const handleChange = event => {\n    const newValue = event.target.value;\n    setValue(newValue);\n  }\n\n  return (\n    <div>\n      <nav class=\"navbar navbar-dark bg-dark justify-content-between\">\n        <span class=\"navbar-brand\">Employee Database</span>\n        <form class=\"form-inline\" onSubmit={submit} value={value}>\n          <input id=\"search\" class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search by name\" aria-label=\"Search\" onChange={handleChange}/>\n            <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" >Search</button>\n        </form>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport API from \"../../utils/api\";\nimport TableHtml from \"../TableHtml\";\nimport Wrapper from '../Wrapper';\nimport Navbar from '../Navbar';\n\nclass TableData extends Component {\n  // const [rows, setRows] = useState([[]]);\n  // const [headings] = useState([\"Picture\", \"Name\", \"Email\", \"Phone\", \"DOB\"]);\n  // const [search, setSearch] = useState(\"\");\n  state = {\n    rows: [[]],\n    headings: [\"Picture\", \"Name\", \"Email\", \"Phone\", \"DOB\"],\n    format: \"\",\n    search: \"\",\n    filteredUsers: [{}],\n    backupRows: [[]],\n    nameSort: 1\n  };\n\n  componentDidMount = () => {\n    this.searchEmployee();\n  }\n\n  searchEmployee = () => {\n    API.getEmployee()\n      .then(employees => {\n        // const data = employees.data.results;\n        // const newData = data.map(date => { return new Date(date.dob.date).getDate() + \"-\" + (new Date(date.dob.date).getMonth() + 1) +\n        // \"-\" + new Date(date.dob.date).getFullYear()});\n        const rows = employees.data.results.map(employee => {\n          return [<img src={employee.picture.medium} className=\"rounded-circle\" alt={employee.name}></img>, `${employee.name.first} ${employee.name.last}`, employee.email, employee.phone, (new Date(employee.dob.date).getMonth() + 1) + \"/\" + (new Date(employee.dob.date).getDate() + \"/\" + (new Date(employee.dob.date).getFullYear()))]\n        })\n        this.setState({ rows, filteredUsers: employees.data, backupRows: rows })\n      })\n      .catch(err => console.log(err));\n  };\n\n  // useEffect(() => {\n  //   API.getEmployee()\n  //     .then(employees => {\n  //       const data = employees.data.results.map(employee => {\n  //         return [employee.picture.thumbnail, `${employee.name.first} ${employee.name.last}`, employee.email, employee.phone, employee.dob]\n  //       })\n  //       setRows(data);\n  //       console.log(data)\n  //     })\n  //     .catch(err => console.log(err));\n  // })\n\n  // const handleInputChange = event => {\n  //   const value = event.target.value;\n  //   const name = event.target.name;\n  //   this.setState({\n  //     [name]: value\n  //   })\n  // };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const search = event.target.getAttribute(\"value\");\n    if (search === \"\") {\n      this.setState({ rows: this.state.backupRows });\n      return;\n    } \n    let sortRows = this.state.backupRows;\n    sortRows = sortRows.filter(i => { return i[1].includes(search) });\n    this.setState({ rows: sortRows });\n    return;\n  };\n\n  handleNameSort = (event) => {\n    event.preventDefault();\n    const headingName = event.target.innerHTML;\n    if (headingName === \"Name\") {\n      if (this.state.nameSort === 1) {\n        const currentRows = this.state.rows;\n        const sortedRows = currentRows.sort();\n        this.setState({rows: sortedRows, nameSort: 2});\n      } else {\n        const currentRows = this.state.rows;\n        const sortedRows = currentRows.reverse();\n        this.setState({rows: sortedRows, nameSort: 1});\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Navbar\n          onSubmit={this.handleFormSubmit}\n          rows={this.state.rows}\n        />\n        <TableHtml\n          headings={this.state.headings}\n          rows={this.state.rows}\n          format={this.state.format}\n          onClick={this.handleNameSort}\n        />\n      </Wrapper>\n\n    )\n  };\n}\n\nexport default TableData;","import './App.css';\nimport Wrapper from './components/Wrapper';\nimport TableData from './components/TableData';\n\nfunction App() {\n  return (\n      <Wrapper>\n        <TableData />\n      </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}